// Code generated by cmd/lexgen (see Makefile's lexgen); DO NOT EDIT.

package bsky

// schema: app.bsky.unspecced.searchPostsSkeleton

import (
	"context"

	"github.com/bluesky-social/indigo/xrpc"
)

// UnspeccedSearchPostsSkeleton_Output is the output of a app.bsky.unspecced.searchPostsSkeleton call.
type UnspeccedSearchPostsSkeleton_Output struct {
	Cursor *string `json:"cursor,omitempty" cborgen:"cursor,omitempty"`
	// hitsTotal: count of search hits. optional, may be rounded/truncated, and may not be possible to paginate through all hits
	HitsTotal *int64                              `json:"hitsTotal,omitempty" cborgen:"hitsTotal,omitempty"`
	Posts     []*UnspeccedDefs_SkeletonSearchPost `json:"posts" cborgen:"posts"`
}

// UnspeccedSearchPostsSkeleton calls the XRPC method "app.bsky.unspecced.searchPostsSkeleton".
//
// cursor: optional pagination mechanism; may not necessarily allow scrolling through entire result set
// q: search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended
func UnspeccedSearchPostsSkeleton(ctx context.Context, c *xrpc.Client, cursor string, limit int64, q string) (*UnspeccedSearchPostsSkeleton_Output, error) {
	var out UnspeccedSearchPostsSkeleton_Output

	params := map[string]interface{}{
		"cursor": cursor,
		"limit":  limit,
		"q":      q,
	}
	if err := c.Do(ctx, xrpc.Query, "", "app.bsky.unspecced.searchPostsSkeleton", params, nil, &out); err != nil {
		return nil, err
	}

	return &out, nil
}
